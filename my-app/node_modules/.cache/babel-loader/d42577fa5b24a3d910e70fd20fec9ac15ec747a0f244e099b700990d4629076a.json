{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suhas\\\\Desktop\\\\Project\\\\my-app\\\\src\\\\Pages\\\\Twitter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Twitter = () => {\n  _s();\n  var _userData$public_metr, _userData$public_metr2;\n  const [username, setUsername] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchTwitterData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/api/twitter/${username}`);\n      console.log('API Response:', response.data); // Debug log\n      setUserData(response.data.data); // Update to access nested `data` object\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to fetch Twitter data. Please check the username and try again.');\n      setUserData(null); // Clear user data on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Enter Twitter username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTwitterData,\n      children: \"Get User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.name || 'No Name Available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), userData.profile_image_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData.profile_image_url,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userData.description || 'No Description Available'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Followers:\", ' ', (_userData$public_metr = (_userData$public_metr2 = userData.public_metrics) === null || _userData$public_metr2 === void 0 ? void 0 : _userData$public_metr2.followers_count) !== null && _userData$public_metr !== void 0 ? _userData$public_metr : 'No Followers Data']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Joined:\", ' ', userData.created_at ? new Date(userData.created_at).toDateString() : 'Date Not Available']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Twitter, \"fn3WC46Am6+iRZFX7qA728jPuh8=\");\n_c = Twitter;\nexport default Twitter;\nvar _c;\n$RefreshReg$(_c, \"Twitter\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Twitter","_s","_userData$public_metr","_userData$public_metr2","username","setUsername","userData","setUserData","error","setError","fetchTwitterData","response","get","console","log","data","err","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","name","profile_image_url","src","alt","description","public_metrics","followers_count","created_at","Date","toDateString","_c","$RefreshReg$"],"sources":["C:/Users/suhas/Desktop/Project/my-app/src/Pages/Twitter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Twitter = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [userData, setUserData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchTwitterData = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/api/twitter/${username}`);\r\n            console.log('API Response:', response.data); // Debug log\r\n            setUserData(response.data.data); // Update to access nested `data` object\r\n            setError(null); // Clear any previous errors\r\n        } catch (err) {\r\n            console.error('Error fetching data:', err);\r\n            setError('Failed to fetch Twitter data. Please check the username and try again.');\r\n            setUserData(null); // Clear user data on error\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Enter Twitter username\"\r\n            />\r\n            <button onClick={fetchTwitterData}>Get User Data</button>\r\n\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {userData && (\r\n                <div>\r\n                    <h2>{userData.name || 'No Name Available'}</h2>\r\n                    {userData.profile_image_url ? (\r\n                        <img src={userData.profile_image_url} alt=\"Profile\" />\r\n                    ) : (\r\n                        <p>No Profile Image</p>\r\n                    )}\r\n                    <p>{userData.description || 'No Description Available'}</p>\r\n                    <p>\r\n                        Followers:{' '}\r\n                        {userData.public_metrics?.followers_count ?? 'No Followers Data'}\r\n                    </p>\r\n                    <p>\r\n                        Joined:{' '}\r\n                        {userData.created_at\r\n                            ? new Date(userData.created_at).toDateString()\r\n                            : 'Date Not Available'}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Twitter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,qCAAqCR,QAAQ,EAAE,CAAC;MACjFS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC7CR,WAAW,CAACI,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MACjCN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACVH,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEQ,GAAG,CAAC;MAC1CP,QAAQ,CAAC,wEAAwE,CAAC;MAClFF,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAElB,gBAAiB;MAAAO,QAAA,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAExDnB,KAAK,iBAAIT,OAAA;MAAG8B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAET;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhDrB,QAAQ,iBACLP,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,EAAKX,QAAQ,CAACyB,IAAI,IAAI;MAAmB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC9CrB,QAAQ,CAAC0B,iBAAiB,gBACvBjC,OAAA;QAAKkC,GAAG,EAAE3B,QAAQ,CAAC0B,iBAAkB;QAACE,GAAG,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEtD5B,OAAA;QAAAkB,QAAA,EAAG;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACzB,eACD5B,OAAA;QAAAkB,QAAA,EAAIX,QAAQ,CAAC6B,WAAW,IAAI;MAA0B;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3D5B,OAAA;QAAAkB,QAAA,GAAG,YACW,EAAC,GAAG,GAAAf,qBAAA,IAAAC,sBAAA,GACbG,QAAQ,CAAC8B,cAAc,cAAAjC,sBAAA,uBAAvBA,sBAAA,CAAyBkC,eAAe,cAAAnC,qBAAA,cAAAA,qBAAA,GAAI,mBAAmB;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACJ5B,OAAA;QAAAkB,QAAA,GAAG,SACQ,EAAC,GAAG,EACVX,QAAQ,CAACgC,UAAU,GACd,IAAIC,IAAI,CAACjC,QAAQ,CAACgC,UAAU,CAAC,CAACE,YAAY,CAAC,CAAC,GAC5C,oBAAoB;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CArDID,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AAuDb,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}